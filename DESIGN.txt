adjacent() + getNumFromRange():
Both of these functions could have been left in the functions file since they do not call the complex objects
we created in the other files/classes. I choose to move both of these function to the Entity class since the Entity
class is the only class calling these methods. So I moved them over as private methods in Entity.

contains():
I choose to move the contains method to viewport since it accesses a lot of the instance variables from the viewport
class. It could have also gone in the point class, but I feel like moving it to viewport seemed more reasonable.

addEntity():
At first I was confused whether I should move this function to WorldModel or Entity, but I ended up choosing to move
it to WorldModel. I choose WorldModel because I thought we were accessing more items from the WorldModel class rather
than the Entity class. It also makes sense that this method based on the name would be in the WorldModel since it
changes the "World" in the animation.

nextPosition* methods():
I choose to put these methods in the Entity class since they are directly affecting an Entity. I believe these
methods could have also gone in WorldModel since a lot of WorldModel's data is also accessed in the methods.

moveToFull():
I thought this method could have been to moved to WorldModel, Entity, or EventScheduler since all these classes'
data is accessed in the method. I, although, choose to move it into the Entity class since it made sense. The most
data being used was coming from Entity and this method was taking in two entity objects as parameters which made me
think I should move it to the Entity class.